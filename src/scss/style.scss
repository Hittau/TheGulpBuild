// function px to rem
@function rem($value) {
   $remValue: calc($value / 16) + rem;
   @return $remValue;
}
// function px to em
@function em($value) {
   $emValue: calc($value / 16) + em;
   @return $emValue;
}

// function adding px prefix
@function pxValue($value) {
   $pxValue: $value + px;
   @return $pxValue;
}

// responsive value mixin
@mixin responsiveValue($property, $firstValue, $secondValue) {
   #{$property}: calc(
      pxValue($secondValue) + ($firstValue - $secondValue) *
         ((100vw - pxValue($minWidth)) / ($templateWidth - $minWidth))
   );
}

//
@mixin containerPadding($value) {
   padding-left: calc($value / 2) + px;
   padding-right: calc($value / 2) + px;
}

// import font(s)
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;600&display=swap");

// font(s)
$fontFamily: "Montserrat", sans-serif; // default font family
$fontSize: rem(14); // default font size

// color(s)
$mainColor: #000; // default color

// template size
$templateWidth: 1440;
// min width
$minWidth: 320;
// container size
$containerWidth: 1200;
// container padding
$containerPadding: 30; //(по 15 слева и справа)

// font weight
$thin: 100;
$extraLight: 200;
$light: 300;
$regular: 400;
$medium: 500;
$semiBold: 600;
$bold: 700;
$extraBold: 800;
$black: 900;

// basic devices sizes (break points)
$pc: em($containerWidth);
$tablet: em(991.98);
$mobile: em(767.98);
$mobileSm: em(575.98);
$mobileXs: em(479.98);

@import "null.scss";
@import "base.scss";
@import "header.scss";
